name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: go mod download

    - name: Run tests
      run: go test -v -race ./...

    - name: Run benchmarks
      run: go test -v -run=^$ -bench=. -benchmem ./...

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Get version
      id: get_version
      run: echo "VERSION=$(cat version.txt)" >> $GITHUB_OUTPUT

    - name: Build
      run: |
        mkdir -p bin
        GOOS=linux GOARCH=amd64 go build -v -o bin/streamer-linux-amd64 cmd/streamer/main.go
        GOOS=linux GOARCH=amd64 go build -v -o bin/redis-viewer-linux-amd64 scripts/redis-viewer.go
        GOOS=darwin GOARCH=amd64 go build -v -o bin/streamer-darwin-amd64 cmd/streamer/main.go
        GOOS=darwin GOARCH=amd64 go build -v -o bin/redis-viewer-darwin-amd64 scripts/redis-viewer.go
        tar czf bin/binance-redis-streamer-linux-amd64.tar.gz -C bin streamer-linux-amd64 redis-viewer-linux-amd64
        tar czf bin/binance-redis-streamer-darwin-amd64.tar.gz -C bin streamer-darwin-amd64 redis-viewer-darwin-amd64

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: bin/

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - uses: actions/checkout@v3

    - name: Get version
      id: get_version
      run: echo "VERSION=$(cat version.txt)" >> $GITHUB_OUTPUT

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: binaries
        path: bin

    - name: Generate changelog
      id: changelog
      run: |
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [ -z "$PREVIOUS_TAG" ]; then
          git log --pretty=format:"* %s" > CHANGELOG.md
        else
          git log --pretty=format:"* %s" $PREVIOUS_TAG..HEAD > CHANGELOG.md
        fi
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        cat CHANGELOG.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ steps.get_version.outputs.VERSION }}
        body: ${{ steps.changelog.outputs.CHANGELOG }}
        files: |
          bin/binance-redis-streamer-linux-amd64.tar.gz
          bin/binance-redis-streamer-darwin-amd64.tar.gz
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 