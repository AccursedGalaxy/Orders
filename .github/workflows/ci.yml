name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    # Only run tests on PRs and non-version-bump commits to main
    if: |
      (github.event_name == 'pull_request') ||
      (github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/v') && !contains(github.event.head_commit.message, 'Bump version to'))
    runs-on: ubuntu-22.04
    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        check-latest: true
        cache: true

    - name: Install dependencies
      run: go mod download

    - name: Run tests
      env:
        CUSTOM_REDIS_URL: redis://localhost:6379/0
      run: |
        go test -v -race \
          binance-redis-streamer/internal/models \
          binance-redis-streamer/pkg/config \
          binance-redis-streamer/pkg/metrics \
          binance-redis-streamer/pkg/binance

  release:
    name: Build and Release
    # Only run on version tags
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        check-latest: true
        cache: true

    - name: Get version
      id: get_version
      run: echo "VERSION=$(cat version.txt)" >> $GITHUB_OUTPUT

    - name: Build
      run: |
        mkdir -p bin
        GOOS=linux GOARCH=amd64 go build -v -ldflags="-X main.Version=$(cat version.txt)" -o bin/streamer-linux-amd64 cmd/streamer/main.go
        GOOS=linux GOARCH=amd64 go build -v -ldflags="-X main.Version=$(cat version.txt)" -o bin/redis-viewer-linux-amd64 scripts/redis-viewer.go
        GOOS=darwin GOARCH=amd64 go build -v -ldflags="-X main.Version=$(cat version.txt)" -o bin/streamer-darwin-amd64 cmd/streamer/main.go
        GOOS=darwin GOARCH=amd64 go build -v -ldflags="-X main.Version=$(cat version.txt)" -o bin/redis-viewer-darwin-amd64 scripts/redis-viewer.go
        tar czf bin/binance-redis-streamer-linux-amd64.tar.gz -C bin streamer-linux-amd64 redis-viewer-linux-amd64
        tar czf bin/binance-redis-streamer-darwin-amd64.tar.gz -C bin streamer-darwin-amd64 redis-viewer-darwin-amd64

    - name: Generate changelog
      id: changelog
      run: |
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [ -z "$PREVIOUS_TAG" ]; then
          CHANGELOG=$(git log --pretty=format:"* %s")
        else
          CHANGELOG=$(git log --pretty=format:"* %s" $PREVIOUS_TAG..HEAD)
        fi
        echo "changelog<<CHANGELOGEOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "CHANGELOGEOF" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        name: Release ${{ steps.get_version.outputs.VERSION }}
        body: ${{ steps.changelog.outputs.changelog }}
        files: |
          bin/binance-redis-streamer-linux-amd64.tar.gz
          bin/binance-redis-streamer-darwin-amd64.tar.gz
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
