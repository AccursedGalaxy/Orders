name: Release

on:
  push:
    branches: [ main ]

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-22.04
    # Skip if it's a release commit
    if: '!contains(github.event.head_commit.message, ''chore(release)'')'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          check-latest: true
          cache: true

      - name: Determine version bump
        id: bump
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          if echo "$COMMIT_MSG" | grep -q "^BREAKING CHANGE"; then
            echo "type=major" >> $GITHUB_OUTPUT
          elif echo "$COMMIT_MSG" | grep -q "^feat"; then
            echo "type=minor" >> $GITHUB_OUTPUT
          else
            echo "type=patch" >> $GITHUB_OUTPUT
          fi

      - name: Bump version
        run: |
          go run cmd/version/main.go -bump ${{ steps.bump.outputs.type }}
          VERSION=$(jq -r .version project.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build binaries
        run: |
          mkdir -p bin
          # Build Linux binaries
          GOOS=linux GOARCH=amd64 go build -o bin/streamer-linux-amd64 ./cmd/streamer
          GOOS=linux GOARCH=amd64 go build -o bin/redis-viewer-linux-amd64 ./cmd/redis-viewer
          # Build Darwin (macOS) binaries
          GOOS=darwin GOARCH=amd64 go build -o bin/streamer-darwin-amd64 ./cmd/streamer
          GOOS=darwin GOARCH=amd64 go build -o bin/redis-viewer-darwin-amd64 ./cmd/redis-viewer

      - name: Run tests
        env:
          CUSTOM_REDIS_URL: redis://localhost:6379/0
          TEST_DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db?sslmode=disable
        run: |
          go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
          fail_ci_if_error: true

      - name: Create archives
        run: |
          cd bin
          tar czf binance-redis-streamer-linux-amd64.tar.gz streamer-linux-amd64 redis-viewer-linux-amd64
          tar czf binance-redis-streamer-darwin-amd64.tar.gz streamer-darwin-amd64 redis-viewer-darwin-amd64

      - name: Generate changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version-file: './project.json'
          version-path: 'version'
          git-message: 'chore(release): {version}'
          output-file: 'CHANGELOG.md'
          skip-version-file: true
          skip-commit: true

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add project.json CHANGELOG.md
          git commit -m "chore(release): v${{ env.VERSION }}"
          git tag -a "v${{ env.VERSION }}" -m "Release v${{ env.VERSION }}"
          git push
          git push --tags

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release v${{ env.VERSION }}
          tag_name: v${{ env.VERSION }}
          body_path: CHANGELOG.md
          files: |
            bin/binance-redis-streamer-linux-amd64.tar.gz
            bin/binance-redis-streamer-darwin-amd64.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 